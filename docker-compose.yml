---
version: '3.6'
services:

  app:
    build: .
    restart: always
    environment:
      ELASTIC_APM_SERVICE_NAME: ${ELASTIC_APM_SERVICE_NAME}
      ELASTIC_APM_SERVER_URL: ${ELASTIC_APM_SERVER_URL}
      ELASTIC_APM_SECRET_TOKEN: ${ELASTIC_APM_SECRET_TOKEN}
    labels:
      logging: "enabled"
    depends_on: [db, mongo, randomuser]

  db:
    image: mysql:5.6
    environment:
      MYSQL_DATABASE: 'db'
      MYSQL_USER: 'user'
      MYSQL_PASSWORD: 'password'
      MYSQL_ROOT_PASSWORD: 'password'
    ports:
      - '3306:3306'
    volumes:
      - './var/mysql:/var/lib/mysql'
      - './ops/database:/docker-entrypoint-initdb.d'
      - './var/log/mysql:/var/log/mysql'
    healthcheck:
      test: "/usr/bin/mysql --user=root --password=password --execute \"SHOW DATABASES;\""
      interval: 2s
      timeout: 20s
      retries: 3

  ha-proxy:
    image: dockercloud/haproxy
    links: [app]
    depends_on: [app]
    volumes:
      - '/var/run/docker.sock:/var/run/docker.sock'
    ports:
      - '8080:80'

  mongo:
    image: mongo:3.2
    volumes:
      - ./var/mongo/db:/data/db
    command: mongod --bind_ip 0.0.0.0
    ports:
      - "27017:27017"

  randomuser:
    restart: always
    image: rcougil/randomuser
    depends_on: [mongo]
    ports:
      - "3000:3000"

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:${TAG}
  #   container_name: elasticsearch
  #   ports: ['9200:9200']
  #   environment:
  #     - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
  #     - discovery.type=single-node
  #     - "ES_JAVA_OPTS=-Xms2g -Xmx2g"
  #     - cluster.routing.allocation.disk.threshold_enabled=false
  #     - "TAKE_FILE_OWNERSHIP=1"
  #   volumes:
  #     - './var/es_data:/usr/share/elasticsearch/data'
  #   healthcheck:
  #     test: ["CMD-SHELL", "curl --silent --fail localhost:9200/_cluster/health || exit 1"]

  # kibana:
  #   image: docker.elastic.co/kibana/kibana:${TAG}
  #   container_name: kibana
  #   ports: ['5601:5601']
  #   environment:
  #     - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
  #   depends_on: ['elasticsearch']
  #   healthcheck:
  #     test: ["CMD", "curl", "-s", "-f", "http://localhost:5601/"]

  metricbeat:
    image: docker.elastic.co/beats/metricbeat:${TAG}
    container_name: metricbeat
    restart: on-failure
    user: root
    command: --strict.perms=false -e
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - './ops/config/metricbeat/metricbeat.yml:/usr/share/metricbeat/metricbeat.yml:ro'
      - '/proc:/hostfs/proc:ro'
      - '/sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro'
      - '/:/hostfs:ro'
      - '/var/run/docker.sock:/var/run/docker.sock'
    # depends_on: ['elasticsearch', 'kibana']

  filebeat:
    image: docker.elastic.co/beats/filebeat:${TAG}
    container_name: filebeat
    command: --strict.perms=false -e
    user: root
    restart: on-failure
    environment:
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD}
    volumes:
      - './ops/config/filebeat/filebeat.yml:/usr/share/filebeat/filebeat.yml:ro'
      - './var/filebeat/data:/usr/share/filebeat/data'
      - './var/log/mysql:/var/log/mysql'
      - '/var/lib/docker/containers/:/var/lib/docker/containers/:ro'
      - '/proc:/hostfs/proc:ro'
      - '/sys/fs/cgroup:/hostfs/sys/fs/cgroup:ro'
      - '/:/hostfs:ro'
      - '/var/run/docker.sock:/var/run/docker.sock'
    # depends_on: ['elasticsearch', 'kibana']
